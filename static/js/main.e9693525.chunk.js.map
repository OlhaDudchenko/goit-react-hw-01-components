{"version":3,"sources":["components/Section/Section.styled.js","components/Section/Section.js","components/Profile/Profile.styled.js","components/Profile/Profile.js","components/Statistics/Statistics.styled.js","components/Statistics/Statistics.js","components/Statistics/StaticticsList.js","components/FriendList/Friend.styled.js","components/FriendList/FriendListItem.js","components/FriendList/FriendList.js","components/TransactionHistory/Transaction.styled.js","components/TransactionHistory/Transaction.js","components/TransactionHistory/TransactionHistory.js","components/App/App.styled.js","components/App/App.js","utils/theme.js","index.js"],"names":["SectionWrapper","styled","div","props","theme","colors","secondaryText","Section","title","children","Avatar","img","ProfileWrapper","Stats","ul","StatsItem","li","StatsText","span","StatsQuantity","Location","p","Tag","Name","Profile","user","name","tag","location","avatar","stats","followers","views","likes","class","src","alt","StatList","white","StatItem","id","SkyBlue","DarkOrchid","HotPink","blue","LightSalmon","black","ItemWrapper","Label","Statistics","label","percentage","StatisticsList","map","stat","FriendWrapper","FriendItems","Item","Status","green","FireBrick","FriendListItem","isOnline","width","FriendList","friends","TransactionWrapper","table","LightGrey","TransactionTitle","thead","TitleText","th","TransactionTable","tbody","TransactionItem","tr","Transaction","type","amount","currency","TransactionHistory","items","Wrapper","App","statistical","transactions","Object","freeze","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e9693525.chunk.js","sourcesContent":["import styled from '@emotion/styled';\n\nexport const SectionWrapper = styled.div`\n  margin-top: auto;\n  width: 45vw;\n  color: ${props => props.theme.colors.secondaryText};\n`;\n","import Proptypes from 'prop-types';\nimport { SectionWrapper } from './Section.styled';\n\nexport function Section({ title, children }) {\n  return (\n    <SectionWrapper>\n      {title && <h2>{title}</h2>}\n      {children}\n    </SectionWrapper>\n  );\n}\n\nSection.propTypes = {\n  title: Proptypes.string,\n};\n","import styled from '@emotion/styled';\n\nexport const Avatar = styled.img`\n  width: 200px;\n  height: 200px;\n  border-radius: 50%;\n`;\nexport const ProfileWrapper = styled.div`\n  width: 45vw;\n`;\nexport const Stats = styled.ul`\n  display: flex;\n  justify-content: center;\n  & :not(:last-child) {\n    margin-right: 5px;\n  }\n`;\nexport const StatsItem = styled.li`\n  width: 50px;\n  display: flex;\n  flex-direction: column;\n  border: ${props => `1px solid${props.theme.colors.secondaryText}`};\n  padding: 10px;\n`;\nexport const StatsText = styled.span`\n  font-size: 14px;\n  text-align: center;\n  color: ${props => props.theme.colors.secondaryText};\n`;\nexport const StatsQuantity = styled.span`\n  font-size: 15px;\n  font-weight: 500;\n  text-align: center;\n`;\nexport const Location = styled.p`\n  font-size: 15px;\n  margin: 0;\n  margin-bottom: 20px;\n  color: ${props => props.theme.colors.secondaryText};\n`;\nexport const Tag = styled.p`\n  font-size: 15px;\n  color: ${props => props.theme.colors.secondaryText};\n`;\nexport const Name = styled.p`\n  font-size: 15px;\n  font-weight: 500;\n`;\n","import PropTypes from 'prop-types';\nimport {\n  Avatar,\n  ProfileWrapper,\n  Stats,\n  StatsItem,\n  StatsText,\n  StatsQuantity,\n  Location,\n  Tag,\n  Name,\n} from './Profile.styled';\n\nexport function Profile({ user }) {\n  const { name, tag, location, avatar, stats } = user;\n  const { followers, views, likes } = stats;\n  return (\n    <ProfileWrapper>\n      <div class=\"description\">\n        <Avatar src={avatar} alt=\"Аватар пользователя\" />\n        <Name>{name}</Name>\n        <Tag>@{tag}</Tag>\n        <Location>{location}</Location>\n      </div>\n\n      <Stats>\n        <StatsItem>\n          <StatsText>Followers</StatsText>\n          <StatsQuantity>{followers}</StatsQuantity>\n        </StatsItem>\n        <StatsItem>\n          <StatsText>Views</StatsText>\n          <StatsQuantity>{views}</StatsQuantity>\n        </StatsItem>\n        <StatsItem>\n          <StatsText>Likes</StatsText>\n          <StatsQuantity>{likes}</StatsQuantity>\n        </StatsItem>\n      </Stats>\n    </ProfileWrapper>\n  );\n}\n\nProfile.propTypes = {\n  name: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  avatar: PropTypes.string.isRequired,\n  stats: PropTypes.number.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const StatList = styled.ul`\n  list-style: none;\n  display: flex;\n  justify-content: center;\n  color: ${props => props.theme.colors.white};\n`;\nexport const StatItem = styled.li`\n  padding: 10px;\n  border: ${props => `0.5px solid${props.theme.colors.secondaryText}`};\n  width: 50px;\n  background-color: ${({ id, theme }) => {\n    switch (id) {\n      case 'id-1':\n        return theme.colors.SkyBlue;\n      case 'id-2':\n        return theme.colors.DarkOrchid;\n      case 'id-3':\n        return theme.colors.HotPink;\n      case 'id-4':\n        return theme.colors.blue;\n      case 'id-5':\n        return theme.colors.LightSalmon;\n      default:\n        return theme.colors.black;\n    }\n  }};\n`;\nexport const ItemWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\nexport const Label = styled.span`\n  margin-bottom: 8px;\n`;\n","import PropTypes from 'prop-types';\nimport { ItemWrapper, Label } from './Statistics.styled';\n\nexport function Statistics({ label, percentage }) {\n  return (\n    <ItemWrapper>\n      <Label>{label}</Label>\n      <span class=\"percentage\">{percentage}</span>\n    </ItemWrapper>\n  );\n}\n\nStatistics.propTypes = {\n  label: PropTypes.string.isRequired,\n  percentage: PropTypes.number.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { Statistics } from 'components/Statistics/Statistics';\nimport { StatList, StatItem } from './Statistics.styled';\n\nexport function StatisticsList({ stats }) {\n  return (\n    <StatList>\n      {stats.map(stat => (\n        <StatItem key={stat.id} id={stat.id}>\n          <Statistics label={stat.label} percentage={stat.percentage} />\n        </StatItem>\n      ))}\n    </StatList>\n  );\n}\n\nStatisticsList.propTypes = {\n  stats: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired,\n      percentage: PropTypes.number.isRequired,\n    }),\n  ),\n};\n","import styled from '@emotion/styled';\n\nexport const FriendWrapper = styled.div`\n  display: flex;\n  align-items: baseline;\n`;\nexport const FriendItems = styled.ul`\n    list-style: none;\n    margin:0;\n    margin-top:20px;\n    & :nth-child(5) {\n    margin-bottom: 0;\n}\n  }\n`;\nexport const Item = styled.li`\n     width: 250px;\n     height: 80px;\n     margin-bottom:15px;\n     border:${props => `1px solid${props.theme.colors.secondaryText}`};\n     border-radius:4px;\n     cursor:pointer;\n     &:hover,&:focus {\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25), 0px 4px 4px rgba(0, 0, 0, 0.06),\n    1px 4px 6px rgba(0, 0, 0, 0.16);}\n}\n}\n`;\nexport const Status = styled.span`\n  display: block;\n  width: 20px;\n  height: 20px;\n  margin: 0;\n  margin-top: auto;\n  margin-bottom: auto;\n  border-radius: 50%;\n  background-color: ${({ id, theme }) => {\n    return id ? theme.colors.green : theme.colors.FireBrick;\n  }};\n`;\nexport const Name = styled.p`\n   margin-top: auto;\n   margin-bottom: auto;\n   margin-left: 10px;\n   font-weight:500;\n   font-size:18px;\n  }};\n`;\nexport const Avatar = styled.img`\n  width:76px\n  }};\n`;\n","import PropTypes from 'prop-types';\nimport { FriendWrapper, Status, Avatar, Name } from './Friend.styled';\n\nexport function FriendListItem({ avatar, name, isOnline }) {\n  return (\n    <FriendWrapper>\n      <Status id={isOnline}></Status>\n      <Avatar src={avatar} alt={name} width=\"48\" />\n      <Name>{name}</Name>\n    </FriendWrapper>\n  );\n}\n\nFriendListItem.propTypes = {\n  avatar: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  isOnline: PropTypes.bool.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { FriendListItem } from 'components/FriendList/FriendListItem';\nimport { FriendItems, Item } from './Friend.styled';\n\nexport function FriendList({ friends }) {\n  return (\n    <FriendItems>\n      {friends.map(({ avatar, name, isOnline, id }) => (\n        <Item key={id}>\n          <FriendListItem avatar={avatar} name={name} isOnline={isOnline} />\n        </Item>\n      ))}\n    </FriendItems>\n  );\n}\n\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(\n    PropTypes.exact({\n      avatar: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      isOnline: PropTypes.bool.isRequired,\n    }),\n  ),\n};\n","import styled from '@emotion/styled';\n\nexport const TransactionWrapper = styled.table`\n  margin-top: 20px;\n  width: 250px;\n  border: ${props => `0.5px solid${props.theme.colors.LightGrey}`};\n`;\nexport const TransactionTitle = styled.thead`\n  background-color: ${props => props.theme.colors.blue};\n  color: ${props => props.theme.colors.white};\n`;\nexport const TitleText = styled.th`\n  padding: 10px;\n`;\nexport const TransactionTable = styled.tbody`\n  color: ${props => props.theme.colors.secondaryText};\n`;\nexport const TransactionItem = styled.tr`\n  &:nth-child(2n) {\n    background-color: ${props => props.theme.colors.LightGrey};\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { TransactionItem } from './Transaction.styled';\n\nexport function Transaction({ type, amount, currency }) {\n  return (\n    <TransactionItem>\n      <td>{type}</td>\n      <td>{amount}</td>\n      <td>{currency}</td>\n    </TransactionItem>\n  );\n}\n\nTransaction.propTypes = {\n  type: PropTypes.string,\n  amount: PropTypes.string,\n  currency: PropTypes.string,\n};\n","import PropTypes from 'prop-types';\nimport { Transaction } from 'components/TransactionHistory/Transaction';\nimport {\n  TransactionWrapper,\n  TransactionTitle,\n  TitleText,\n  TransactionTable,\n} from './Transaction.styled';\n\nexport function TransactionHistory({ items }) {\n  return (\n    <TransactionWrapper>\n      <TransactionTitle>\n        <TitleText>Type</TitleText>\n        <TitleText>Amount</TitleText>\n        <TitleText>Currency</TitleText>\n      </TransactionTitle>\n\n      <TransactionTable>\n        {items.map(({ id, type, amount, currency }) => (\n          <Transaction\n            key={id}\n            id={id}\n            type={type}\n            amount={amount}\n            currency={currency}\n          />\n        ))}\n      </TransactionTable>\n    </TransactionWrapper>\n  );\n}\n\nTransactionHistory.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.exact({\n      type: PropTypes.string.isRequired,\n      amount: PropTypes.string.isRequired,\n      currency: PropTypes.string.isRequired,\n    }),\n  ),\n};\n","import styled from '@emotion/styled';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-content: baseline;\n  padding: 20px;\n  text-align: center;\n`;\n","import { Section } from '../Section/Section';\nimport { Profile } from '../Profile/Profile';\nimport { StatisticsList } from '../Statistics/StaticticsList';\n// import StatisticsTitle from \"../Statistics/StatisticsTitle\";\nimport { FriendList } from '../FriendList/FriendList';\nimport { TransactionHistory } from '../TransactionHistory/TransactionHistory';\nimport friends from 'back-end-data/friends';\nimport statistical from 'back-end-data/statistical-data';\nimport transactions from 'back-end-data/transactions';\nimport user from 'back-end-data/user';\nimport { Wrapper } from './App.styled';\n\nexport function App() {\n  return (\n    <Wrapper>\n      <Profile user={user} />\n      <Section title=\"Upload stats\">\n        <StatisticsList stats={statistical} />\n      </Section>\n\n      <FriendList friends={friends} />\n      <TransactionHistory items={transactions} />\n    </Wrapper>\n  );\n}\n","export const theme = Object.freeze({\n  colors: {\n    white: '#ffffff',\n    black: '#010101',\n    green: '#4caf50',\n    HotPink: '#FF69B4',\n    blue: '#2196f3',\n    secondaryText: '#757575',\n    SkyBlue: '#87CEEB',\n    DarkOrchid: '#9932CC',\n    LightSalmon: '#FFA07A',\n    FireBrick: '#B22222',\n    LightGrey: '#D3D3D3',\n  },\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ThemeProvider } from '@emotion/react';\nimport './index.css';\nimport { App } from 'components/App/App';\nimport { theme } from 'utils/theme';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}